const entitySymbol=Symbol(),subEntitiesSymbol=Symbol(),postConstructSymbol=Symbol();class SirenError extends Error{constructor(t){super(t)}}function areEqual(t,i){return Array.isArray(t)?Array.isArray(i)&&t.length===i.length&&t.every((t=>i.includes(t))):t===i}class EntityWrapper{constructor(t,i){this[entitySymbol]=t,"function"==typeof i&&(this[postConstructSymbol]=i,i(this))}hasClass(t){return!!this[entitySymbol].class&&this[entitySymbol].class.includes(t)}get class(){return this[entitySymbol].class||[]}get title(){return this[entitySymbol].title||""}get properties(){return this[entitySymbol].properties||{}}get href(){return this[entitySymbol].href}get rel(){return this[entitySymbol].rel}property(t,i){const e=this.properties[t];return null==e?i:e}links(t){const i=this[entitySymbol].links||[];return t?("string"==typeof t&&(t=[t]),Array.isArray(t)?i.filter((i=>areEqual(t,i.rel))):i.filter((i=>{for(const e in t)if(!areEqual(i[e],t[e]))return!1;return!0}))):i}hasLink(t){return siren.isLink(this.link(t))}link(t){if("string"==typeof t&&(t=[t]),Array.isArray(t)){for(const i of this.links())if(areEqual(t,i.rel))return i}else for(const i of this.links()){let e=!0;for(const n in t)if(!areEqual(t[n],i[n])){e=!1;break}if(e)return i}return emptyLink}hasEntity(t){if(this[entitySymbol].entities){"string"==typeof t&&(t=[t]);for(const i of this[entitySymbol].entities)if(areEqual(i.rel,t))return!0}return!1}entities(t){return!this[subEntitiesSymbol]&&this[entitySymbol].entities&&(this[subEntitiesSymbol]=this[entitySymbol].entities.map((t=>siren.entity(t,this[postConstructSymbol])))),t?("string"==typeof t&&(t=[t]),this.entities().filter((i=>areEqual(i.rel,t)))):this[subEntitiesSymbol]||[]}entity(t){"string"==typeof t&&(t=[t]);for(const i of this.entities())if(areEqual(i.rel,t))return i;return emptyEntity}toJSON(){return this[entitySymbol]}}const emptyEntity=Object.freeze(new EntityWrapper({})),emptyLink=Object.freeze({}),siren={mimeType:"application/vnd.siren+json",entity:function(t,i){return t?siren.isEntity(t)?t:new EntityWrapper(t,i):emptyEntity},isEntity:function(t){return t instanceof EntityWrapper},isLink:function(t){return!!(t&&t.href&&t.rel)},isSubEntity:function(t){return!(!siren.isEntity(t)||!t.rel)},isSubEntityEmbeddedLink:function(t){return!(!siren.isEntity(t)||!siren.isLink(t))},request:function(t){let i;if(siren.isLink(t)?i=t:siren.isEntity(t)&&(i=t.link("self")),!siren.isLink(i))throw new SirenError("No link information found to create request for this entity");const e=new Headers;return i.type?e.set("Accept",i.type):e.set("Accept",`${siren.mimeType},application/json;q=0.9,*/*;q=0.8`),new Request(i.href,{method:"GET",headers:e})},visitLinks:function(t,i,e=!1){if(siren.isEntity(t)){"string"==typeof t[entitySymbol].href&&i(t[entitySymbol]);for(const e of t.links())siren.isLink(e)&&i(e);if(e)for(const e of t.entities())siren.visitLinks(e,i)}else siren.isLink(t)&&i(t)},equal:function(t,i){return!(!siren.isEntity(t)||!siren.isEntity(i))&&(t.hasLink("self")&&(t=t.link("self")),i.hasLink("self")&&(i=i.link("self")),siren.isLink(t)&&t.href===i.href)}};export default siren;